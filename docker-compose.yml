version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: idp_postgres
    environment:
      POSTGRES_USER: gemini
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # From .env
      POSTGRES_DB: idp_data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: idp_redis
    ports:
      - "6379:6379"
    restart: unless-stopped



  n8n:
    image: n8nio/n8n
    container_name: idp_n8n
    environment:
      - GENERIC_TIMEZONE=Europe/Berlin
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: idp_prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.5
    container_name: idp_grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: idp_api
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: ${DATABASE_URL} # From .env
      REDIS_URL: ${REDIS_URL} # From .env
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    container_name: idp_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - grafana
      - n8n
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:v1.7.0
    container_name: idp_node_exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host_root'
    volumes:
      - /:/host_root:ro,rslave
    restart: unless-stopped

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: idp_postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://gemini:${POSTGRES_PASSWORD}@postgres:5432/idp_data?sslmode=disable" # From .env
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    restart: unless-stopped

  redis_exporter:
    image: oliver006/redis_exporter:v1.58.0
    container_name: idp_redis_exporter
    command:
      - '--redis.addr=redis:6379'
    ports:
      - "9121:9121"
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:
  prometheus_data:
  grafana_data:
